@model WebDay2.Models.ClassRoom

@{
    ViewData["Title"] = "Edit";
    SelectList listData = new SelectList(ViewBag.Students,
                                        nameof(Student.StudentID),
                                        nameof(Student.LastName)
                                );
}

<h1>Edit</h1>

<h4>ClassRoom</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ClassRoomID" />
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsActive" /> @Html.DisplayNameFor(model => model.IsActive)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<hr />
<ul>
@foreach(Student std in ViewBag.Students) {
    <li><a asp-route-StudentId="@std.StudentID" asp-route-ClassRoomId="@Model.ClassRoomID">
        @std.FirstName  @std.LastName</a>
    </li>
}
</ul>
<hr />
<h3>test SelectList</h3>
<select asp-items="@listData">
    
</select>
<hr />
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
